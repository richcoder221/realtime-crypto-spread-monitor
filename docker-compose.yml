name: combined

volumes:
  redpanda-0: null
services:
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr
      - internal://0.0.0.0:9092,external://0.0.0.0:19092
      # use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      #
      # use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      #
      # address the broker advertises to clients that connect to the Kafka API.
      - --advertise-kafka-addr
      - internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr
      - internal://0.0.0.0:8082,external://0.0.0.0:18082
      # address the broker advertises to clients that connect to PandaProxy.
      - --advertise-pandaproxy-addr
      - internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr
      - internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with eachother internally.
      - --rpc-addr
      - redpanda-0:33145
      - --advertise-rpc-addr
      - redpanda-0:33145
      # tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      # the amount of memory to make available to Redpanda.
      - --memory 1G
      # the amount of memory that's left for the Seastar subsystem.
      # For development purposes this is set to 0.
      - --reserve-memory 0M
      # Redpanda won't assume it has all of the provisioned CPU
      # (to accommodate Docker resource limitations).
      - --overprovisioned
      # enable logs for debugging.
      - --default-log-level=debug
    image: docker.redpanda.com/vectorized/redpanda:v22.3.11
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - my_private
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:19644
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/vectorized/console:v2.1.1
    networks:
      - my_private
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0


  questdb:
      image: questdb/questdb:latest
      container_name: questdb
      restart: always
      volumes:
      # for persistent storage of QuestDB data
        - /questdb_zfs:/var/lib/questdb
      networks:
        - my_private
      environment:
        - QDB_LINE_DEFAULT_PARTITION_BY=YEAR
        - QDB_CAIRO_WAL_WRITER_DATA_APPEND_PAGE_SIZE=128K
        - QDB_CAIRO_WRITER_DATA_APPEND_PAGE_SIZE=128K
        - QDB_CAIRO_O3_COLUMN_MEMORY_SIZE=128K
        - QDB_CAIRO_WRITER_DATA_INDEX_KEY_APPEND_PAGE_SIZE=128K
        - QDB_CAIRO_WRITER_DATA_INDEX_VALUE_APPEND_PAGE_SIZE=128K
        - QDB_DB_NAME=qdb  # Add database name for QuestDB
        # Enable PostgreSQL wire protocol on all interfaces
        - QDB_PG_LISTEN_ADDRESS=0.0.0.0:8812
      ports:
        - "8812:8812"  # PostgreSQL wire protocol
        - "9000:9000"  # REST API
      
  grafana:
    image: grafana/grafana-oss
    container_name: questdb_quickstart_grafana
    restart: always
    networks:
      - my_private
    ports:
      - 3000:3000
    environment:
      # Plugin settings
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=questdb-datasource, questdb-questdb-datasource
      # Authentication settings
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=quest
      # QuestDB connection settings
      - GF_INSTALL_PLUGINS=questdb-questdb-datasource
      # Use Docker internal network hostname
      - QDB_CLIENT_HOST=questdb
      - QDB_CLIENT_PORT=8812
      - QDB_CLIENT_USER=admin
      - QDB_CLIENT_PASSWORD=quest
      - QDB_CLIENT_DATABASE=qdb
      - QDB_SSL_MODE=disable
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=250ms
    depends_on:
      - questdb

networks:
  my_private:
    driver: bridge